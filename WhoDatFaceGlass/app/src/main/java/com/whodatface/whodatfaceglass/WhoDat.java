package com.whodatface.whodatfaceglass;

import com.google.android.glass.widget.CardBuilder;
import com.google.android.glass.widget.CardScrollAdapter;
import com.google.android.glass.widget.CardScrollView;
import com.google.android.glass.media.Sounds;

import android.app.Activity;
import android.content.Intent;
import android.hardware.Camera;
import android.hardware.Camera.PictureCallback;
import android.content.Context;
import android.media.AudioManager;
import android.os.Bundle;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;

import com.sromku.simple.fb.*;
import com.sromku.simple.fb.entities.*;
import com.sromku.simple.fb.entities.Privacy.PrivacySettings;
import com.sromku.simple.fb.listeners.*;

import java.util.List;

/**
 * An {@link Activity} that recognizes a face and returns corresponding Facebook data
 */
public class WhoDat extends Activity {

    /**
     * {@link CardScrollView} to use as the main content view
     */
    private CardScrollView mCardScroller;

    /**
     * {@link View} generated by {@link #buildView()}
     */
    private View mView;

    /**
     * {@link Camera} for getting images of face
     */
    private Camera camera;

    /**
     * {@link SimpleFacebook} for making requests to Facebook
     */
    private SimpleFacebook fb;

    /**
     * Permissions ({@link Permission} for uploading photos
     */
    private final Permission[] permissions = new Permission[] {
            Permission.USER_PHOTOS,
            Permission.PUBLISH_ACTION
    };

    @Override
    protected void onCreate(Bundle bundle) {
        super.onCreate(bundle);

        // Set up view
        mView = buildView();

        // Set up camera
        camera = Camera.open();

        // Set up Facebook
        SimpleFacebookConfiguration configuration = new SimpleFacebookConfiguration.Builder()
                .setAppId("1137378212962676")
                .setNamespace("whodatface")
                .setPermissions(permissions)
                .build();
        SimpleFacebook.setConfiguration(configuration);
        fb = SimpleFacebook.getInstance(this);
        fb.login(onLoginListener);

        // Set up scroll view
        mCardScroller = new CardScrollView(this);
        mCardScroller.setAdapter(new CardScrollAdapter() {
            @Override
            public int getCount() {
                return 1;
            }

            @Override
            public Object getItem(int position) {
                return mView;
            }

            @Override
            public View getView(int position, View convertView, ViewGroup parent) {
                return mView;
            }

            @Override
            public int getPosition(Object item) {
                if (mView.equals(item)) {
                    return 0;
                }
                return AdapterView.INVALID_POSITION;
            }
        });

        // Handle the tap event
        mCardScroller.setOnItemClickListener(new AdapterView.OnItemClickListener() {
            @Override
            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                // Take picture
                camera.takePicture(null, null, uploadToFacebook);

                // Plays sound to indicate that TAP actions has succeeded
                AudioManager am = (AudioManager) getSystemService(Context.AUDIO_SERVICE);
                am.playSoundEffect(Sounds.SUCCESS);
            }
        });
        setContentView(mCardScroller);
    }

    @Override
    protected void onResume() {
        super.onResume();
        fb = SimpleFacebook.getInstance(this);
        mCardScroller.activate();
    }

    @Override
    protected void onPause() {
        mCardScroller.deactivate();
        super.onPause();
    }

    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        fb.onActivityResult(requestCode, resultCode, data);
        super.onActivityResult(requestCode, resultCode, data);
    }

    /**
     * Builds a Glass styled "Hello World!" view using the {@link CardBuilder} class.
     */
    private View buildView() {
        CardBuilder card = new CardBuilder(this, CardBuilder.Layout.TEXT);

        card.setText("Tap to get info!");
        return card.getView();
    }

    /**
     * Uploads a picture to Facebook and retrieves a recognition response.
     */
    private PictureCallback uploadToFacebook = new PictureCallback() {

        @Override
        public void onPictureTaken(byte[] data, Camera camera) {
            Photo photo = new Photo.Builder()
                    .setImage(data)
                    .setName("WhoDatFace?")
                    .setPrivacy(new Privacy.Builder()
                            .setPrivacySettings(PrivacySettings.SELF)
                            .build())
                    .build();
            fb.publish(photo, true, onPublishListener);
        }
    };


    OnLoginListener onLoginListener = new OnLoginListener() {
        @Override
        public void onLogin(String accessToken, List<Permission> acceptedPermissions, List<Permission> declinedPermissions) {
            // change the state of the button or do whatever you want
        }

        @Override
        public void onCancel() {
            // user canceled the dialog
        }

        @Override
        public void onFail(String reason) {
            // failed to login
        }

        @Override
        public void onException(Throwable throwable) {
            // exception from facebook
        }
    };

    OnPublishListener onPublishListener = new OnPublishListener() {
        @Override
        public void onComplete(String response) {
            // change the state of the button or do whatever you want
        }

        @Override
        public void onFail(String reason) {
            // failed to login
        }

        @Override
        public void onException(Throwable throwable) {
            // exception from facebook
        }
    };
}